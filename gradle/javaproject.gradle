// custom tasks for creating source jar
task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
// custom tasks for creating javadoc jar
task javadocJar(type: Jar, dependsOn:"javadoc") {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
// custom tasks for creating test jar
task testJar(type: Jar) {
    classifier = 'tests'
    from sourceSets.test.output
}

task writeBuidProperties(type:Copy){
    File bp = file("${sourceSets.main.output.resourcesDir.absolutePath}/${project.name}-build.properties")
    if(!bp.exists()){
        bp.getParentFile().mkdirs();
        bp.createNewFile();
    }else{
        // delete old
        bp.delete()
        bp.createNewFile();
    }
    project(":").subprojects.each{p->
        bp.append("${p.name}.version=${p.version}\n")
    }
    bp.append("build.date=${buildDate}\n")
    bp.append("build.version=${gitVersion}\n")
    bp.append("build.branch=${gitBranch}\n")
}
tasks.classes.dependsOn tasks.writeBuidProperties

configurations {
    tests
    sjar
    jdoc
}

// add the jars as artifacts
artifacts {
    archives sourcesJar
    archives javadocJar
    archives testJar
}